{"version":3,"file":"fetch2.min.js","sources":["../node_modules/rollup-plugin-node-globals/src/global.js","../src/url-params.js","../src/index.js"],"sourcesContent":["export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","\r\nfunction isArr (val) {\r\n  return Object.prototype.toString.call(val) === '[object Array]'\r\n}\r\n\r\n/**\r\n* 把参数对象序列化成树对象\r\n*\r\n**/\r\nfunction ObjTree (obj) {\r\n  var arr = []\r\n  for (var key in obj) {\r\n    if (typeof obj[key] === 'object') {\r\n      arr.push({label: key, child: ObjTree(obj[key])})\r\n    } else {\r\n      arr.push({label: key, val: obj[key]})\r\n    }\r\n  }\r\n  return arr\r\n}\r\n/**\r\n* 从对象树种遍历所有路径，及叶子\r\n*\r\n**/\r\nfunction ObjTreePaths (tree) {\r\n  var arr = []\r\n  // 路径遍历\r\n  function path (tree, label) {\r\n    label = label || ''\r\n    for (var i in tree) {\r\n      if (tree[i].child) {\r\n        if (label) {\r\n          path(tree[i].child, label + '[' + tree[i].label + ']')\r\n        } else {\r\n          path(tree[i].child, tree[i].label)\r\n        }\r\n      } else {\r\n        // 把叶子值连接到路径后面\r\n        if (label) {\r\n          arr.push(label + '[' + tree[i].label + ']=' + tree[i].val)\r\n        } else {\r\n          arr.push(tree[i].label + '=' + tree[i].val)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  path(tree)\r\n  return arr\r\n}\r\n\r\nfunction URLParams (obj, encode) {\r\n  if (typeof obj === 'object' && !isArr(obj)) {\r\n    var paths = ObjTreePaths(ObjTree(obj))\r\n    var qs = paths.join('&')\r\n    return encode ? encodeURI(qs) : qs\r\n  }\r\n  return ''\r\n}\r\n\r\nexport default {\r\n  url: (url, obj, encode) => {\r\n    var params = URLParams(obj, encode)\r\n    if (url.indexOf('?') > -1) {\r\n      var uri = url.split('?')\r\n      return params ? (url.replace(/&$/, '') + (uri[1] ? '&' : '') + params) : url\r\n    } else {\r\n      return params ? url + '?' + params : url\r\n    }\r\n  },\r\n  stringify: (obj, encode) => {\r\n    return URLParams(obj, encode)\r\n  }\r\n}\r\n","import URLParams from './url-params'\r\nimport interceptor from 'js-interceptor'\r\n\r\nvar _self = (typeof self === 'object' && self.self === self) && self\r\nvar _global = (typeof global === 'object' && global.global === global) && global\r\nvar root = _self || _global\r\n\r\nvar Fetch = root.fetch || null\r\nvar FormData = root.FormData\r\n\r\n\r\nfunction Fetch2 () {}\r\n\r\nFetch2.prototype.request = {\r\n  interceptors: [],\r\n  use (fn) {\r\n    if (typeof fn !== 'function') {\r\n      console.warn('the interceptors must be a function')\r\n      return false\r\n    }\r\n    this.interceptors.push(fn)\r\n    return true\r\n  }\r\n}\r\n\r\nFetch2.prototype.response = {\r\n  interceptors: [],\r\n  use (fn) {\r\n    if (typeof fn !== 'function') {\r\n      console.warn('the interceptors must be a function')\r\n      return false\r\n    }\r\n    this.interceptors.push(fn)\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n* 3xx-5xx responses are NOT network errors, and should be handled in then()\r\n**/\r\nFetch2.prototype.fetch = function (uri, method, options = {}) {\r\n  var that = this\r\n  method = method ? method.toUpperCase() : 'GET'\r\n  // Request with GET/HEAD method cannot have body.\r\n  if (method === 'GET' || method === 'HEAD') {\r\n    delete options.body\r\n  }\r\n  var isTransion = (typeof options.body === 'object') && !(options.body instanceof FormData)\r\n  // 对于formData数据，并不需要指定Content-Type\r\n  if (isTransion || typeof options.body === 'string') {\r\n    if (!options.headers) options.headers = {}\r\n    options.headers['Content-Type'] = 'application/x-www-form-urlencoded'\r\n  }\r\n  if (isTransion) {\r\n    options.body = URLParams.stringify(options.body)\r\n  }\r\n  // var opts = Object.assign({}, {method}, options)\r\n  options.method = method\r\n  var opts = options\r\n  return new Promise((resolve, reject) => {\r\n\r\n    function response (ctx) {\r\n      let responseHandler = interceptor(that.response.interceptors)\r\n      responseHandler(ctx, function (res) {\r\n        resolve(res)\r\n      })\r\n    }\r\n\r\n    interceptor(that.request.interceptors)(opts, function (ctx) {\r\n      var url = URLParams.url(uri, opts.params, true)\r\n      Fetch(url, opts).then(res => {\r\n        switch (options.type) {\r\n          case 'text':\r\n            res.text().then(text => {\r\n              res.data = text\r\n              response(res)\r\n            })\r\n            break\r\n          case 'blob':\r\n            res.blob().then(blob => {\r\n              res.data = blob\r\n              response(res)\r\n            })\r\n            break\r\n          case 'arrayBuffer':\r\n            res.arrayBuffer().then(buffer => {\r\n              res.data = buffer\r\n              response(res)\r\n            })\r\n            break\r\n          default:\r\n            res.json().then(json => {\r\n              res.data = json\r\n              response(res)\r\n            }).catch(err => reject(err))\r\n        }\r\n      }).catch(err => {\r\n        reject(err)\r\n      })\r\n    })\r\n  })\r\n\r\n}\r\n\r\nFetch2.prototype.URLParams = URLParams\r\n\r\n// for node-fetch\r\nFetch2.prototype.init = function (fetch, formData) {\r\n  Fetch = fetch\r\n  FormData = formData\r\n}\r\n\r\nFetch2.prototype.Fetch2 = Fetch2\r\n\r\nFetch2.prototype.get = function (uri, options) {\r\n  return this.fetch(uri, 'GET', options)\r\n}\r\n\r\nFetch2.prototype.post = function (uri, options) {\r\n  return this.fetch(uri, 'POST', options)\r\n}\r\n\r\nFetch2.prototype.put = function (uri, options) {\r\n  return this.fetch(uri, 'PUT', options)\r\n}\r\n\r\nFetch2.prototype.delete = function (uri, options) {\r\n  return this.fetch(uri, 'DELETE', options)\r\n}\r\n\r\nFetch2.prototype.head = function (uri, options) {\r\n  return this.fetch(uri, 'HEAD', options)\r\n}\r\n\r\nFetch2.prototype.patch = function (uri, options) {\r\n  return this.fetch(uri, 'PATCH', options)\r\n}\r\n\r\nvar fetch2 = new Fetch2()\r\n\r\nexport default fetch2\r\n"],"names":["global","self","window","URLParams","obj","encode","val","Object","prototype","toString","call","qs","tree","ObjTree","arr","key","babelHelpers.typeof","push","label","child","path","i","join","encodeURI","url","params","indexOf","uri","split","replace","_self","_global","root","Fetch","fetch","FormData","Fetch2","request","fn","warn","interceptors","response","method","options","that","this","toUpperCase","body","isTransion","headers","stringify","opts","Promise","resolve","reject","ctx","interceptor","res","then","type","text","data","blob","arrayBuffer","buffer","json","catch","err","init","formData","get","post","put","delete","head","patch"],"mappings":"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"}